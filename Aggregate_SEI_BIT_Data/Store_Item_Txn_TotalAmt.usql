USE DATABASE [master];
REFERENCE ASSEMBLY [Assemblies];
/*
CREATE DATA SOURCE IF NOT EXISTS MyAzureSQLDBDataSource
FROM AZURESQLDB
WITH
(
    PROVIDER_STRING = "Database=AdventureWorksLT;Trusted_Connection=False;Encrypt=True",
    CREDENTIAL = MyAzureSQLDBCredential,
    REMOTABLE_TYPES = (bool, byte, sbyte, short, ushort, int, uint, long, ulong, decimal, float, double, string, DateTime)
);
*/
DECLARE @datedFolder string = "20171112";
DECLARE @headerIn string = "adl://mscrmprodadls.azuredatalakestore.net/BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_121_output.csv";
DECLARE @detailsIn string = "adl://mscrmprodadls.azuredatalakestore.net/BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_122_output.csv";
DECLARE @productIn string = "adl://mscrmprodadls.azuredatalakestore.net/Temp/productTable.csv";
DECLARE @outPathRoot string = "adl://711dlprodcons01.azuredatalakestore.net/BIT_CRM/Aggregates/" + @datedFolder + "/";
DECLARE @storeItemtOut string = @outPathRoot + @datedFolder + "_Store_Item_Txn_TotalAmt.csv";
/*
DECLARE @datedFolder string = "20171023";
DECLARE @headerIn string = "/BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_121_output.csv";
DECLARE @detailsIn string = "/BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_122_output.csv";
DECLARE @productIn string = "/BIT_CRM/productTable.csv";
DECLARE @outPathRoot string = "/BIT_CRM/" + @datedFolder + "/";
DECLARE @productDaypartOut string = @outPathRoot + @datedFolder + "_Product_Daypart_TxnDetails.csv";
*/
@headerTable =
    EXTRACT RecordId string,
            StoreNumber int,
            TransactionType string,
            DayNumber int,
            ShiftNumber int,
            TransactionUID int,
            Aborted string,
            DeviceNumber string,
            DeviceType string,
            EmployeeNumber string,
            EndDate string,
            EndTime string,
            StartDate string,
            StartTime string,
            Status string,
            TotalAmount string,
            TransactionCode string,
            TransactionSequence string,
            RewardMemberID string
    FROM @headerIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);


@detailsTable =
    EXTRACT RecordID string,
            StoreNumber int,
            TransactionType string,
            DayNumber int,
            ShiftNumber int,
            TransactionUID int,
            SequenceNumber string,
            ProductNumber int,
            PLUNumber string,
            RecordAmount int,
            RecordCount int,
            RecordType int,
            SizeIndx string,
            ErrorCorrectionFlag string,
            PriceOverideFlag string,
            TaxableFlag string,
            VoidFlag string,
            RecommendedFlag string,
            PriceMultiple string,
            CarryStatus string,
            TaxOverideFlag string,
            PromotionCount string,
            SalesPrice string,
            MUBasePrice string,
            HostItemId string,
            CouponCount string
    FROM @detailsIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);


@productTable =
    EXTRACT ProductMaster_Id int,
            slin int,
            upc string,
            Category_Cd string,
            Category_Ds string,
            Depart_Cd int,
            Manufacturer_Cd string,
            Manufacturer_Nm string,
            PSA_Cd string,
            PSA_Ds string,
            Item_Ds string,
            SubCategory_Cd string,
            SubCategory_Ds string,
            VerticalClass_Cd string,
            VerticalClass_Ds string,
            CorpBrand string,
            UPCType_Cd string,
            AgeRestricted_Fg string,
            CurrentImport_Id string,
            OriginalImport_Id string,
            Modified_Dttm string,
            Created_Dttm string
    FROM @productIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);


//Making the header table data unique as there are duplicate records
@header_1 =
    SELECT DISTINCT X. *,
                    X.DayNumber.ToString() + X.ShiftNumber.ToString() + X.StoreNumber.ToString() + X.TransactionUID.ToString() + X.TransactionSequence.ToString() AS Uniq_Id
    FROM @headerTable AS X;


@detailsTable_1 =
    SELECT DISTINCT *,
                    InsightReportingUSQL.StringModifier.remLeadingZero(PLUNumber) AS String_PLU
    FROM @detailsTable;


@result =

    SELECT X.EndDate,
           X.StoreNumber,
           RewardMemberID == null OR RewardMemberID == "                   "? "Non_Member" : "Member" AS Member_Status,
           COUNT(DISTINCT Uniq_Id) AS Txn_Cnt,
           SUM(DT1.RecordType IN(5) ? ( - 1) * RecordCount : (1) * RecordCount) AS ItemCount,
           SUM(DT1.RecordType IN(5) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) AS TotalAmount
    FROM @header_1 AS X
         INNER JOIN
             @detailsTable_1 AS DT1
         ON X.DayNumber == DT1.DayNumber AND X.StoreNumber == DT1.StoreNumber AND X.ShiftNumber == DT1.ShiftNumber AND X.TransactionUID == DT1.TransactionUID
         //AND X.TransactionSequence==DT1.SequenceNumber
         INNER JOIN
             @productTable AS p
         ON p.slin == DT1.ProductNumber AND p.upc == DT1.String_PLU

    WHERE Aborted == "N" AND DT1.VoidFlag == "N" AND DT1.RecordType IN(1, 5, 18) //AND TransactionCode==3          
          AND p.Depart_Cd NOT IN(340202, 340101, 341003, 340821, 341103) //340202: LOTTERY, 340101: MONEY ORDERS,341003,341103,340821: GIFTCARDS 
    GROUP BY X.EndDate,
             X.StoreNumber,
             RewardMemberID==null OR RewardMemberID=="                   " ? "Non_Member":"Member";


OUTPUT @result
TO @storeItemtOut
USING Outputters.Csv(outputHeader : true, quoting : false);