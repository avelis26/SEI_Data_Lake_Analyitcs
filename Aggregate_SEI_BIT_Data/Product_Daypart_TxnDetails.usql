USE DATABASE [master];
REFERENCE ASSEMBLY [Assemblies];
// @datedFolder MUST BE ON LINE 4! DO NOT MOVE!!!
DECLARE @datedFolder string = "20171107";
DECLARE @adlsRoot string = "adl://mscrmprodadls.azuredatalakestore.net/"; // used for remote execution
//DECLARE @adlsRoot string = "/CRM/"; // used for local testing
DECLARE @headerIn string = @adlsRoot + "BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_121_output.csv";
DECLARE @detailsIn string = @adlsRoot + "BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_122_output.csv";
DECLARE @productIn string = @adlsRoot + "Temp/productTable.csv";
DECLARE @storeIn string = @adlsRoot + "Temp/storeTable.csv";
DECLARE @outPathRoot string = @adlsRoot + "BIT_CRM/" + @datedFolder + "/";
DECLARE @outputFile string = @outPathRoot + @datedFolder + "_Product_Daypart_TxnDetails.csv";

@headerTable =
    EXTRACT RecordId string,
            StoreNumber int,
            TransactionType string,
            DayNumber int,
            ShiftNumber int,
            TransactionUID int,
            Aborted string,
            DeviceNumber string,
            DeviceType string,
            EmployeeNumber string,
            EndDate string,
            EndTime int,
            StartDate string,
            StartTime string,
            Status string,
            TotalAmount string,
            TransactionCode string,
            TransactionSequence string,
            RewardMemberID string
    FROM @headerIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);

@detailsTable =
    EXTRACT RecordID string,
            StoreNumber int,
            TransactionType string,
            DayNumber int,
            ShiftNumber int,
            TransactionUID int,
            SequenceNumber string,
            ProductNumber int,
            PLUNumber string,
            RecordAmount int,
            RecordCount int,
            RecordType int,
            SizeIndx string,
            ErrorCorrectionFlag string,
            PriceOverideFlag string,
            TaxableFlag string,
            VoidFlag string,
            RecommendedFlag string,
            PriceMultiple string,
            CarryStatus string,
            TaxOverideFlag string,
            PromotionCount string,
            SalesPrice string,
            MUBasePrice string,
            HostItemId string,
            CouponCount string
    FROM @detailsIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);

@productTable =
    EXTRACT ProductMaster_Id int,
            slin int,
            upc string,
            Category_Cd string,
            Category_Ds string,
            Depart_Cd int,
            Manufacturer_Cd string,
            Manufacturer_Nm string,
            PSA_Cd string,
            PSA_Ds string,
            Item_Ds string,
            SubCategory_Cd string,
            SubCategory_Ds string,
            VerticalClass_Cd string,
            VerticalClass_Ds string,
            CorpBrand string,
            UPCType_Cd string,
            AgeRestricted_Fg string,
            CurrentImport_Id string,
            OriginalImport_Id string,
            Modified_Dttm string,
            Created_Dttm string
    FROM @productIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);
/*
@productTable =
    SELECT *
    FROM EXTERNAL [MsProdSqlDw_7ELE] EXECUTE
	@"SELECT
	   [ProductMaster_Id]
      ,[slin]
      ,[upc]
      ,[Category_Cd]
      ,[Category_Ds]
      ,case when ISNULL([Depart_Cd], 0)='' then 0 else ISNULL([Depart_Cd], 0) end AS [Depart_Cd]
      ,[Manufacturer_Cd]
      ,[Manufacturer_Nm]
      ,[PSA_Cd]
      ,[PSA_Ds]
      ,[Item_Ds]
      ,[SubCategory_Cd]
      ,[SubCategory_Ds]
      ,[VerticalClass_Cd]
      ,[VerticalClass_Ds]
      ,[CorpBrand]
      ,[UPCType_Cd]
      ,[AgeRestricted_Fg]
      ,[CurrentImport_Id]
      ,[OriginalImport_Id]
      ,[Modified_Dttm]
      ,[Created_Dttm]
     FROM [dbo].[TRNS_ProductMaster]";
*/
@storeTable =
    EXTRACT Store_Id int,
            Zone_Cd string,
            Active_Fg int,
            Dark_Fg int,
            Owner_Cd string,
            Zone_Nm string,
            Country_Cd string,
            Market_Ds string,
            Market_Cd string
    FROM @storeIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);

@storeTable_valid =
    SELECT *
    FROM @storeTable AS s
    WHERE
    Country_Cd == "US"
    AND s.Owner_Cd != "X"
    AND s.Owner_Cd != ""
    AND s.Owner_Cd IS NOT NULL
    AND s.Zone_Nm != "Asset Management"
    AND s.Zone_Nm != "US Unallocated"
    AND s.Zone_Nm != ""
    AND s.Zone_Nm IS NOT NULL
    AND s.Zone_Cd != "0"
    AND s.Active_Fg == 1
    AND s.Dark_Fg != 1

    UNION

    SELECT *
    FROM @storeTable AS s
    WHERE Country_Cd == "CA"
          AND s.Active_Fg == 1
          AND s.Zone_Nm != "Asset Management"
          AND s.Zone_Nm != "CA Unallocated"
          AND s.Zone_Cd != "0"
          AND s.Zone_Nm != ""
          AND s.Zone_Nm IS NOT NULL
          AND s.Dark_Fg != 1;

//Making the header table data unique as there are duplicate records
@headerWithPk =
    SELECT X. *,
           X.DayNumber.ToString() + X.ShiftNumber.ToString() + X.StoreNumber.ToString() + X.TransactionUID.ToString() + X.TransactionSequence.ToString() AS Uniq_Id
    FROM @headerTable AS X;

@detailsWithPk =
    SELECT DISTINCT X. *,
                    InsightReportingUSQL.StringModifier.RemLeadingZero(X.PLUNumber) AS String_PLU
    FROM @detailsTable AS X;

@result =
    SELECT X.EndDate,
           X.StoreNumber,
           p.PSA_Cd,
           p.PSA_Ds,
           p.Category_Cd,
           p.Category_Ds,
           RewardMemberID == null OR RewardMemberID == "                   "? "Non_Member" : "Member" AS Member_Status,
           COUNT(DISTINCT X.EndTime BETWEEN 000000 AND 060000? Uniq_Id : NULL) AS Txn_Cnt_DayP1,
           COUNT(DISTINCT X.EndTime BETWEEN 060001 AND 090000? Uniq_Id : NULL) AS Txn_Cnt_DayP2,
           COUNT(DISTINCT X.EndTime BETWEEN 090001 AND 110000? Uniq_Id : NULL) AS Txn_Cnt_DayP3,
           COUNT(DISTINCT X.EndTime BETWEEN 110001 AND 140000? Uniq_Id : NULL) AS Txn_Cnt_DayP4,
           COUNT(DISTINCT X.EndTime BETWEEN 140001 AND 160000? Uniq_Id : NULL) AS Txn_Cnt_DayP5,
           COUNT(DISTINCT X.EndTime BETWEEN 160001 AND 190000? Uniq_Id : NULL) AS Txn_Cnt_DayP6,
           COUNT(DISTINCT X.EndTime BETWEEN 190001 AND 235959? Uniq_Id : NULL) AS Txn_Cnt_DayP7,
           SUM(X.EndTime BETWEEN 000000 AND 060000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP1,
           SUM(X.EndTime BETWEEN 060001 AND 090000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP2,
           SUM(X.EndTime BETWEEN 090001 AND 110000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP3,
           SUM(X.EndTime BETWEEN 110001 AND 140000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP4,
           SUM(X.EndTime BETWEEN 140001 AND 160000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP5,
           SUM(X.EndTime BETWEEN 160001 AND 190000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP6,
           SUM(X.EndTime BETWEEN 190001 AND 235959? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP7,
           SUM(X.EndTime BETWEEN 000000 AND 060000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP1,
           SUM(X.EndTime BETWEEN 060001 AND 090000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP2,
           SUM(X.EndTime BETWEEN 090001 AND 110000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP3,
           SUM(X.EndTime BETWEEN 110001 AND 140000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP4,
           SUM(X.EndTime BETWEEN 140001 AND 160000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP5,
           SUM(X.EndTime BETWEEN 160001 AND 190000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP6,
           SUM(X.EndTime BETWEEN 190001 AND 235959? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP7
    FROM @headerWithPk AS X
         INNER JOIN
             @detailsWithPk AS DT1
         ON X.DayNumber == DT1.DayNumber AND X.StoreNumber == DT1.StoreNumber AND X.ShiftNumber == DT1.ShiftNumber AND X.TransactionUID == DT1.TransactionUID
         //AND X.TransactionSequence==DT1.SequenceNumber
         INNER JOIN
             @productTable AS p
         ON p.slin == DT1.ProductNumber AND p.upc == DT1.String_PLU // int == int AND varchar == string
         INNER JOIN
             @storeTable_valid AS s
         ON s.Store_Id == X.StoreNumber // int == int

    WHERE Aborted == "N" AND DT1.VoidFlag == "N" AND DT1.RecordType IN(1, 5, 18)
          AND p.Depart_Cd NOT IN(340202, 340101, 341003, 340821, 341103) //340202: LOTTERY, 340101: MONEY ORDERS,341003,341103,340821: GIFTCARDS 

    GROUP BY X.EndDate,
             X.StoreNumber,
             p.PSA_Cd,
             p.PSA_Ds,
             p.Category_Cd,
             p.Category_Ds,
             RewardMemberID==null OR RewardMemberID=="                   " ? "Non_Member":"Member";

OUTPUT @result
TO @outputFile
USING Outputters.Csv(outputHeader : true, quoting : false);
