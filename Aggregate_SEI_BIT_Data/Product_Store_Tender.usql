USE DATABASE [master];
REFERENCE ASSEMBLY [Assemblies];
// @datedFolder MUST BE ON LINE 4! DO NOT MOVE!!!
DECLARE @datedFolder string = "20171023";
DECLARE @adlsRoot string = "adl://mscrmprodadls.azuredatalakestore.net/"; // used for remote execution
//DECLARE @adlsRoot string = "/CRM/"; // used for local testing
DECLARE @headerIn string = @adlsRoot + "BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_121_output.csv";
DECLARE @detailsIn string = @adlsRoot + "BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_122_output.csv";
DECLARE @mediaIn string = @adlsRoot + "BIT_CRM/" + @datedFolder + "/" + @datedFolder + "_d1_124_output.csv";
DECLARE @storeIn string = @adlsRoot + "Temp/storeTable.csv";
DECLARE @outPathRoot string = @adlsRoot + "BIT_CRM/" + @datedFolder + "/";
DECLARE @prodOutputFile string = @outPathRoot + @datedFolder + "_Product_Daypart_TxnDetails.csv";
DECLARE @storOutputFile string = @outPathRoot + @datedFolder + "_Store_Item_TxnTotal.csv";
DECLARE @tendOutputFile string = @outPathRoot + @datedFolder + "_Tender_Types_TxnType.csv";

@headerTable =
    EXTRACT RecordId string,
            StoreNumber int,
            TransactionType string,
            DayNumber int,
            ShiftNumber int,
            TransactionUID int,
            Aborted string,
            DeviceNumber string,
            DeviceType string,
            EmployeeNumber string,
            EndDate string,
            EndTime string,
            StartDate string,
            StartTime string,
            Status string,
            TotalAmount string,
            TransactionCode string,
            TransactionSequence string,
            RewardMemberID string
    FROM @headerIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);

@detailsTable =
    EXTRACT RecordID string,
            StoreNumber int,
            TransactionType string,
            DayNumber int,
            ShiftNumber int,
            TransactionUID int,
            SequenceNumber string,
            ProductNumber int?,
            PLUNumber string,
            RecordAmount int,
            RecordCount int,
            RecordType int,
            SizeIndx string,
            ErrorCorrectionFlag string,
            PriceOverideFlag string,
            TaxableFlag string,
            VoidFlag string,
            RecommendedFlag string,
            PriceMultiple string,
            CarryStatus string,
            TaxOverideFlag string,
            PromotionCount string,
            SalesPrice string,
            MUBasePrice string,
            HostItemId string,
            CouponCount string
    FROM @detailsIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);

@productTable =
    SELECT ProductMaster_Id,
           slin,
           upc,
           Category_Cd,
           Category_Ds,
           Depart_Cd,
           Manufacturer_Cd,
           Manufacturer_Nm,
           PSA_Cd,
           PSA_Ds,
           Item_Ds,
           SubCategory_Cd,
           SubCategory_Ds,
           VerticalClass_Cd,
           VerticalClass_Ds,
           CorpBrand,
           UPCType_Cd,
           AgeRestricted_Fg,
           CurrentImport_Id,
           OriginalImport_Id,
           Modified_Dttm,
           Created_Dttm
    FROM EXTERNAL [MsProdSqlDw_7ELE] EXECUTE
	@"SELECT [ProductMaster_Id]
      ,[SLIN] AS [slin]
	  ,CAST(CAST([upc] AS decimal) AS varchar) AS [upc]
      ,CAST([Category_Cd] AS decimal) AS [Category_Cd]
      ,[Category_Ds]
      ,CAST(case when ISNULL([Depart_Cd],'0')='' then '0' else ISNULL([Depart_Cd],'0') end AS int) AS [Depart_Cd]
      ,[Manufacturer_Cd]
      ,[Manufacturer_Nm]
      ,[PSA_Cd]
      ,[PSA_Ds]
      ,[Item_Ds]
      ,CAST([SubCategory_Cd] AS decimal) AS [SubCategory_Cd]
      ,[SubCategory_Ds]
      ,CAST([VerticalClass_Cd] AS decimal) AS [VerticalClass_Cd]
      ,[VerticalClass_Ds]
      ,[CorpBrand]
      ,[UPCType_Cd]
      ,[AgeRestricted_Fg]
      ,[CurrentImport_Id]
      ,[OriginalImport_Id]
	  ,
	  CAST(DATEPART(mm, [Modified_Dttm]) AS varchar)
	  + '/' +
	  CAST(DATEPART(dd, [Modified_Dttm]) AS varchar)
	  + '/' +
	  CAST(DATEPART(yyyy, [Modified_Dttm]) AS varchar)
	  + ' ' +
	  CAST(DATEPART(hh, [Modified_Dttm]) AS varchar)
	  + ':' +
	  CAST(DATEPART(mi, [Modified_Dttm]) AS varchar)
	  AS [Modified_Dttm]
	  ,
	  CAST(DATEPART(mm, [Created_Dttm]) AS varchar)
	  + '/' +
	  CAST(DATEPART(dd, [Created_Dttm]) AS varchar)
	  + '/' +
	  CAST(DATEPART(yyyy, [Created_Dttm]) AS varchar)
	  + ' ' +
	  CAST(DATEPART(hh, [Created_Dttm]) AS varchar)
	  + ':' +
	  CAST(DATEPART(mi, [Created_Dttm]) AS varchar)
	  AS [Created_Dttm]
      FROM [dbo].[TRNS_ProductMaster]";

@storeTable =
    EXTRACT Store_Id int,
            Zone_Cd string,
            Active_Fg int,
            Dark_Fg int,
            Owner_Cd string,
            Zone_Nm string,
            Country_Cd string,
            Market_Ds string,
            Market_Cd string
    FROM @storeIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);
/*
@storeTable =
    SELECT Store_Id,
           Zone_Cd,
           Active_Fg,
           Dark_Fg,
           Owner_Cd,
           Zone_Nm,
           Country_Cd,
           Market_Ds,
           Market_Cd
    FROM EXTERNAL [MsProdSqlDw_7ELE] EXECUTE
	@"SELECT [Store_Id]
      ,CAST([Zone_Cd] AS varchar)
	  ,CAST([Active_Fg] AS int)
	  ,CAST([Dark_Fg] AS int)
	  ,[Owner_Cd]
	  ,[Zone_Nm]
	  ,[Country_Cd]
	  ,[Market_Ds]
	  ,[Market_Cd]
     FROM [dbo].[STOR_Master] AS SM
     INNER JOIN [dbo].[COMN_Address] AS CA
     ON SM.[PhysicalAddress_Id] = CA.[Address_Id]";
*/
@mediaTable =
    EXTRACT RecordId string,
            StoreNumber int,
            TransactionType string,
            DayNumber int,
            ShiftNumber int,
            TransactionUID int,
            SequenceNumber string,
            MediaNumber string,
            NetworkMediaSequenceNumber string,
            MediaType string,
            RecordCount string,
            RecordAmount int,
            RecordType int,
            ErrorCorrectionFlag string,
            VoidFlag string,
            ExchangeRate string,
            ForeignAmount string
    FROM @mediaIn
    USING Extractors.Csv(skipFirstNRows : 1, quoting : true);

@storeTable_valid =
    SELECT *
    FROM @storeTable AS s
    WHERE
    Country_Cd == "US"
    AND s.Owner_Cd != "X"
    AND s.Owner_Cd != ""
    AND s.Owner_Cd IS NOT NULL
    AND s.Zone_Nm != "Asset Management"
    AND s.Zone_Nm != "US Unallocated"
    AND s.Zone_Nm != ""
    AND s.Zone_Nm IS NOT NULL
    AND s.Zone_Cd != "0"
    AND s.Active_Fg == 1
    AND s.Dark_Fg != 1

    UNION

    SELECT *
    FROM @storeTable AS s
    WHERE Country_Cd == "CA"
          AND s.Active_Fg == 1
          AND s.Zone_Nm != "Asset Management"
          AND s.Zone_Nm != "CA Unallocated"
          AND s.Zone_Cd != "0"
          AND s.Zone_Nm != ""
          AND s.Zone_Nm IS NOT NULL
          AND s.Dark_Fg != 1;

//Making the header table data unique as there are duplicate records
@headerWithPk =
    SELECT DISTINCT X. *,
                    X.DayNumber.ToString() + X.ShiftNumber.ToString() + X.StoreNumber.ToString() + X.TransactionUID.ToString() + X.TransactionSequence.ToString() AS Uniq_Id
    FROM @headerTable AS X;

@detailsWithPlu =
    SELECT DISTINCT X. *,
                    InsightReportingUSQL.StringModifier.RemLeadingZero(X.PLUNumber) AS String_PLU
    FROM @detailsTable AS X;

@mediaSales =
    SELECT DISTINCT *
    FROM @mediaTable;

@productResult =
    SELECT X.EndDate,
           X.StoreNumber,
           p.PSA_Cd,
           p.PSA_Ds,
           p.Category_Cd,
           p.Category_Ds,
           RewardMemberID == null OR RewardMemberID == "                   "? "Non_Member" : "Member" AS Member_Status,
           COUNT(DISTINCT X.EndTime BETWEEN 000000 AND 060000? Uniq_Id : NULL) AS Txn_Cnt_DayP1,
           COUNT(DISTINCT X.EndTime BETWEEN 060001 AND 090000? Uniq_Id : NULL) AS Txn_Cnt_DayP2,
           COUNT(DISTINCT X.EndTime BETWEEN 090001 AND 110000? Uniq_Id : NULL) AS Txn_Cnt_DayP3,
           COUNT(DISTINCT X.EndTime BETWEEN 110001 AND 140000? Uniq_Id : NULL) AS Txn_Cnt_DayP4,
           COUNT(DISTINCT X.EndTime BETWEEN 140001 AND 160000? Uniq_Id : NULL) AS Txn_Cnt_DayP5,
           COUNT(DISTINCT X.EndTime BETWEEN 160001 AND 190000? Uniq_Id : NULL) AS Txn_Cnt_DayP6,
           COUNT(DISTINCT X.EndTime BETWEEN 190001 AND 235959? Uniq_Id : NULL) AS Txn_Cnt_DayP7,
           SUM(X.EndTime BETWEEN 000000 AND 060000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP1,
           SUM(X.EndTime BETWEEN 060001 AND 090000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP2,
           SUM(X.EndTime BETWEEN 090001 AND 110000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP3,
           SUM(X.EndTime BETWEEN 110001 AND 140000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP4,
           SUM(X.EndTime BETWEEN 140001 AND 160000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP5,
           SUM(X.EndTime BETWEEN 160001 AND 190000? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP6,
           SUM(X.EndTime BETWEEN 190001 AND 235959? (DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) : 0) AS Ttl_Amt_DayP7,
           SUM(X.EndTime BETWEEN 000000 AND 060000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP1,
           SUM(X.EndTime BETWEEN 060001 AND 090000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP2,
           SUM(X.EndTime BETWEEN 090001 AND 110000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP3,
           SUM(X.EndTime BETWEEN 110001 AND 140000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP4,
           SUM(X.EndTime BETWEEN 140001 AND 160000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP5,
           SUM(X.EndTime BETWEEN 160001 AND 190000? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP6,
           SUM(X.EndTime BETWEEN 190001 AND 235959? (DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) : 0) AS Ttl_Itm_Amt_DayP7
    FROM @headerWithPk AS X
         INNER JOIN
             @detailsWithPlue AS DT1
         ON X.DayNumber == DT1.DayNumber AND X.StoreNumber == DT1.StoreNumber AND X.ShiftNumber == DT1.ShiftNumber AND X.TransactionUID == DT1.TransactionUID
         //AND X.TransactionSequence==DT1.SequenceNumber
         INNER JOIN
             @productTable AS p
         ON p.slin == DT1.ProductNumber AND p.upc == DT1.String_PLU // int == int AND varchar == string
         INNER JOIN
             @storeTable_valid AS s
         ON s.Store_Id == X.StoreNumber // int == int

    WHERE Aborted == "N" AND DT1.VoidFlag == "N" AND DT1.RecordType IN(1, 5, 18)
          AND p.Depart_Cd NOT IN(340202, 340101, 341003, 340821, 341103) //340202: LOTTERY, 340101: MONEY ORDERS,341003,341103,340821: GIFTCARDS 

    GROUP BY X.EndDate,
             X.StoreNumber,
             p.PSA_Cd,
             p.PSA_Ds,
             p.Category_Cd,
             p.Category_Ds,
             RewardMemberID==null OR RewardMemberID=="                   " ? "Non_Member":"Member";

@storeResult =
    SELECT EndDate,
           StoreNumber,
           Member_Status,
           Txn_Cnt,
           ItemCount,
           TotalAmount,
           Member_Status == "Non_Member"? 0 : Unique_member_count AS Unique_member_count
    FROM
    (
        SELECT X.EndDate,
               X.StoreNumber,
               RewardMemberID == null OR RewardMemberID == "                   "? "Non_Member" : "Member" AS Member_Status,
               COUNT(DISTINCT Uniq_Id) AS Txn_Cnt,
               SUM(DT1.RecordType IN(5, 18) ? ( - 1) * RecordCount : (1) * RecordCount) AS ItemCount,
               SUM(DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) AS TotalAmount,
               COUNT(DISTINCT RewardMemberID) AS Unique_member_count
        FROM @headerWithPk AS X
             INNER JOIN
                 @detailsWithPlu AS DT1
             ON X.DayNumber == DT1.DayNumber AND X.StoreNumber == DT1.StoreNumber AND X.ShiftNumber == DT1.ShiftNumber AND X.TransactionUID == DT1.TransactionUID
             //AND X.TransactionSequence==DT1.SequenceNumber
             INNER JOIN
                 @productTable AS p
             ON p.slin == DT1.ProductNumber AND p.upc == DT1.String_PLU // int == int AND varchar == string
             INNER JOIN
                 @storeTable_valid AS s
             ON s.Store_Id == X.StoreNumber

        WHERE Aborted == "N" AND DT1.VoidFlag == "N" AND DT1.RecordType IN(1, 5, 18)
              AND p.Depart_Cd NOT IN(340202, 340101, 341003, 340821, 341103) //340202: LOTTERY, 340101: MONEY ORDERS,341003,341103,340821: GIFTCARDS 
        GROUP BY X.EndDate,
                 X.StoreNumber,
                 RewardMemberID==null OR RewardMemberID=="                   " ? "Non_Member":"Member"
    ) AS X;

@tenderResult =
    SELECT X.EndDate AS EndDate,
           X.StoreNumber,
           RewardMemberID == null OR RewardMemberID == "                   "? "Non_Member" : "Member" AS Member_Status,
           MediaType == "CS"?"CASH" :
           MediaType == "CR"? "CREDIT" :
           MediaType == "DB"? "DEBIT" :
           MediaType == "FL"? "FLEET CARD" :
           MediaType == "SV"? "SERVICE CARD" :
           "Unknown" AS Media_Type,
           COUNT(DISTINCT X.Uniq_Id) AS Txn_Cnt,
           SUM(DT1.RecordType IN(5, 18) ? ( - 1) * DT1.RecordAmount / 100f : (1) * DT1.RecordAmount / 100f) AS TotalAmount
    FROM @headerWithPk AS X
         INNER JOIN
             @detailsWithPlu AS DT1
         ON X.DayNumber == DT1.DayNumber AND X.StoreNumber == DT1.StoreNumber AND X.ShiftNumber == DT1.ShiftNumber AND X.TransactionUID == DT1.TransactionUID
         INNER JOIN
             @mediaSales AS MS1
         ON X.DayNumber == MS1.DayNumber AND X.StoreNumber == MS1.StoreNumber AND X.ShiftNumber == MS1.ShiftNumber AND X.TransactionUID == MS1.TransactionUID
         INNER JOIN
             @productTable AS p
         ON p.slin == DT1.ProductNumber AND p.upc == DT1.String_PLU
         INNER JOIN
             @storeTable_valid AS s
         ON s.Store_Id == X.StoreNumber

    WHERE Aborted == "N" AND DT1.VoidFlag == "N" AND DT1.RecordType IN(1, 5, 18) //AND TransactionCode==3  

          AND p.Depart_Cd NOT IN(340202, 340101, 341003, 340821, 341103) //340202: LOTTERY, 340101: MONEY ORDERS,341003,341103,340821: GIFTCARDS 
    GROUP BY X.EndDate,
             X.StoreNumber,
             RewardMemberID==null OR RewardMemberID=="                   " ? "Non_Member":"Member",
             MediaType == "CS"?"CASH" :
             MediaType == "CR"? "CREDIT" :
             MediaType == "DB"? "DEBIT" :
             MediaType == "FL"? "FLEET CARD" :
             MediaType == "SV"? "SERVICE CARD" :
             "Unknown";

OUTPUT @productResult
TO @prodOutputFile
USING Outputters.Csv(outputHeader : true, quoting : false);

OUTPUT @storeResult
TO @storOutputFile
USING Outputters.Csv(outputHeader : true, quoting : false);

OUTPUT @tenderResult
TO @tendOutputFile
USING Outputters.Csv(outputHeader : true, quoting : false);
